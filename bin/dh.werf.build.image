path=$(pwd)
if ! [[ "$path" =~ "deckhouse" && "$path" =~ "images" ]]; then echo "no path images"; exit 1; fi
images=$(echo "$path" | gawk -F'/' '{
  for(i=1; i<=NF; i++) {
    if($i == "images") {
      before = gensub(/^[0-9]+-/, "", "g", $(i-1))
      after = $(i+1)
      break
    }
  }
  if (before != "" && after != "") {
    print before "/" after
  }
}')
if [[ -z "$images" ]]; then echo "image: $images"; exit 1; fi
dir=$(echo "$path" | gawk -F'/' '{
  for(i=1; i<=NF; i++) {
    if($i == "deckhouse" || $i == "deckhouse-cse") {
      for(j=1; j<=i; j++) {
        if (j > 1) { 
          printf("/%s", $j)
        } else {
          printf("%s", $j)
        }
      }
      printf("\n")
      break
    }
  }
}')
WERF_SAVE_BUILD_REPORT=true
WERF_BUILD_REPORT_PATH=/tmp/.werf-build-report.json
echo "cd $dir && werf build --dev $images$1 --introspect-error=true"
if cd $dir && werf build --dev $images$1 --introspect-error=true; then
  image=$(cat /tmp/.werf-build-report.json | jq -r '.Images[] | .WerfImageName + " " + .DockerImageName')
  echo "$image" | grep $images | while read -r line; do
    echo ""
    echo $line | awk '{print "image " $1}'
    echo $line | awk '{print "trivy.scan " $2}'
    echo $line | awk '{print "dive " $2}'
    echo $line | awk '{print "docker inspect " $2}'
  done
fi
